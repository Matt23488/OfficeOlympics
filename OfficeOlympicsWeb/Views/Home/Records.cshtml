@model RecordListViewModel

@{
    ViewBag.Title = $"Records - {Model.Event.EventName}";
}

<h2>
    @Html.IconFor(model => model.Event.IconFileName)
    @Html.DisplayFor(model => model.Event.EventName)
    Records
</h2>

<div class="container">
    <div class="btn-group">
        <a href="@Url.Action("Records", Html.NullifiedRouteValues("olympicEventId"))" class="btn btn-default">&laquo; Back to Events</a>
    </div>
    <br />
    <br />
    @if (Model.Records.Any())
    {
        <div class="table-responsive">
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Place</th>
                        <th>@Html.DisplayNameFor(model => model.Records[0].Competitor)</th>
                        <th>@Html.DisplayNameFor(model => model.Records[0].Score)</th>
                        <th>@Html.DisplayNameFor(model => model.Records[0].DateAchieved)</th>
                        <th>@Html.DisplayNameFor(model => model.Records[0].Witness1)</th>
                        <th>@Html.DisplayNameFor(model => model.Records[0].Witness2)</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Records.Count; i++)
                    {
                        <tr>
                            <td>@(i + 1)</td>
                            <td>@Html.DisplayFor(model => model.Records[i].Competitor.FullName)</td>
                            <td>@Html.DisplayFor(model => model.Records[i].Score, "RecordScoreTemplate")</td>
                            <td>@Html.DisplayFor(model => model.Records[i].DateAchieved)</td>
                            <td>@Html.DisplayFor(model => model.Records[i].Witness1.Initials)</td>
                            <td>@Html.DisplayFor(model => model.Records[i].Witness2.Initials)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>