@model NewRecordViewModel

@{
    ViewBag.Title = "New Record";
}

<h2>Congratulations! - @Html.DisplayFor(model => model.Event.EventName)</h2>

@using (Html.BeginForm("NewRecord", "Home", FormMethod.Post, new { id = "newRecordForm" }))
{
    @Html.HiddenFor(model => model.Event.EventId)
    @Html.HiddenFor(model => model.Event.EventName)
    <div class="form-group">
        @Html.LabelFor(model => model.Record.RecordHolder)
        @Html.TextBoxFor(model => model.Record.RecordHolder, new { autocomplete = "off" })
    </div>
    <div class="form-group">
        @Html.HiddenFor(model => model.Event.EventTypeId)
        @Html.LabelFor(model => model.Record.Score)
        @Html.TextBoxFor(model => model.Record.Score.Score, new { autocomplete = "off" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Record.Witnesses)
        @Html.TextBoxFor(model => model.Record.Witnesses[0], new { autocomplete = "off" })
        @Html.TextBoxFor(model => model.Record.Witnesses[1], new { autocomplete = "off" })
    </div>
    <div class="btn-group">
        <button type="submit" class="btn btn-success">Save</button>
        <a href="@Url.Action("Records", new { olympicEventId = Model.Event.EventId })" class="btn btn-default">Cancel</a>
    </div>
}

@section scripts{
    @Scripts.Render("~/bundles/record")    
}